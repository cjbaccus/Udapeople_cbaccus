---
- name: "install dependencies."
  become: true
  apt:
    name: ["nodejs", "npm"]
    state: latest
    update_cache: yes

- name: "install pm2"
  become: true
  npm:
    name: pm2
    global: yes
    production: yes
    state: present

- name: Creates directory
  file:
    path: /home/ubuntu/backend
    state: directory

- name: "copy backend binaries"
  become: true
  synchronize:
    src: /root/project/backend
    dest: /home/ubuntu/
    recursive: true

- name: Uncompress Backend
  shell: |
    cd /home/ubuntu/backend
    tar xvzf artifact.tar.gz -C .
    ls -la
    cp package.json /home/ubuntu/

#### Section added to see what we can get
- name: Install backed dependencies with NPM
  command: npm install --production
  args:
    chdir: /home/ubuntu/backend
- name: start backend with pm2
  shell: |
    export ENVIRONMENT=production
    export NODE_ENV=production
    export TYPEORM_HOST="{{ lookup('env', 'TYPEORM_HOST') }}"
    export TYPEORM_ENTITIES="{{ lookup('env', 'TYPEORM_ENTITIES') }}"
    export TYPEORM_USERNAME="{{ lookup('env', 'TYPEORM_USERNAME') }}"
    export TYPEORM_PASSWORD="{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    export TYPEORM_DATABASE="{{ lookup('env', 'TYPEORM_DATABASE') }}"
    cd /home/ubuntu/backend
    pm2 start npm --name backend2 -- start
    npm run start
    # pm2 logs
  args:
    chdir: /home/ubuntu/backend
### Section end 

# - name: Build
#   become: true
#   shell: |
#     cd /home/ubuntu/backend
#     npm install
#     npm run build
# - name: Start PM2
#   shell: |
#     cd /home/ubuntu/backend 
#     pm2 start npm --name backend -- start

